<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A user with this login already exists." xml:space="preserve">
    <value>يوجد بالفعل مستخدم مع تسجيل الدخول هذا.</value>
  </data>
  <data name="An unknown failure has occurred." xml:space="preserve">
    <value>حدث فشل غير معروف.</value>
  </data>
  <data name="Can not delete a used entity." xml:space="preserve">
    <value>لا يمكن حذف كائن مستخدم.</value>
  </data>
  <data name="Code used before." xml:space="preserve">
    <value>الرمز مستخدم من قبل.</value>
  </data>
  <data name="Email '{0}' is already taken." xml:space="preserve">
    <value>البريد الإلكتروني "{0}" مستخدم بالفعل.</value>
  </data>
  <data name="Email '{0}' is invalid." xml:space="preserve">
    <value>البريد الإلكتروني "{0}" غير صالح.</value>
  </data>
  <data name="Incorrect password." xml:space="preserve">
    <value>كلمة سر خاطئة.</value>
  </data>
  <data name="Invalid token." xml:space="preserve">
    <value>رمز غير صالح.</value>
  </data>
  <data name="Invalid Username or Password" xml:space="preserve">
    <value>خطأ في اسم المستخدم أو كلمة مرور</value>
  </data>
  <data name="Lockout is not enabled for this user." xml:space="preserve">
    <value>لم يتم تمكين القفل لهذا المستخدم.</value>
  </data>
  <data name="Name used before." xml:space="preserve">
    <value>الاسم مستخدم من قبل.</value>
  </data>
  <data name="Optimistic concurrency failure, object has been modified." xml:space="preserve">
    <value>فشل التزامن المتفائل ، تم تعديل الكائن.</value>
  </data>
  <data name="Passwords must be at least {0} characters." xml:space="preserve">
    <value>يجب أن تتكون كلمات المرور من {0} حرف على الأقل.</value>
  </data>
  <data name="Passwords must have at least one digit ('0'-'9')." xml:space="preserve">
    <value>يجب أن تحتوي كلمات المرور على رقم واحد على الأقل ("0" - "9").</value>
  </data>
  <data name="Passwords must have at least one lowercase ('a'-'z')." xml:space="preserve">
    <value>يجب أن تحتوي كلمات المرور على حرف صغير واحد على الأقل ("a" - "z").</value>
  </data>
  <data name="Passwords must have at least one non alphanumeric character." xml:space="preserve">
    <value>يجب أن تحتوي كلمات المرور على حرف واحد على الأقل ليس أبجديًا رقميًا.</value>
  </data>
  <data name="Passwords must have at least one uppercase ('A'-'Z')." xml:space="preserve">
    <value>يجب أن تحتوي كلمات المرور على حرف كبير واحد على الأقل ("A" - "Z").</value>
  </data>
  <data name="Role name '{0}' is already taken." xml:space="preserve">
    <value>اسم الدور "{0}" مستخدم بالفعل.</value>
  </data>
  <data name="Role name '{0}' is invalid." xml:space="preserve">
    <value>اسم الدور "{0}" غير صالح.</value>
  </data>
  <data name="User already has a password set." xml:space="preserve">
    <value>تم تعيين كلمة مرور للمستخدم بالفعل.</value>
  </data>
  <data name="User already in role '{0}'." xml:space="preserve">
    <value>المستخدم بالفعل في الدور "{0}".</value>
  </data>
  <data name="User is not in role '{0}'." xml:space="preserve">
    <value>المستخدم ليس في الدور "{0}".</value>
  </data>
  <data name="User Name '{0}' is already taken." xml:space="preserve">
    <value>اسم المستخدم "{0}" مستخدم بالفعل.</value>
  </data>
  <data name="User name '{0}' is invalid, can only contain letters or digits." xml:space="preserve">
    <value>اسم المستخدم "{0}" غير صالح ، يمكن أن يحتوي فقط على أحرف أو أرقام.</value>
  </data>
  <data name="Your account is blocked" xml:space="preserve">
    <value>تم حظر حسابك</value>
  </data>
  <data name="Your account is locked" xml:space="preserve">
    <value>حسابك مغلق</value>
  </data>
</root>